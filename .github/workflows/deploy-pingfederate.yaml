# Ref: https://dlmade.medium.com/ci-cd-with-github-action-and-aws-eks-5fd9714010cd
name: Deploy PF to Digital ocean
on:
  push:
    tags: pf-v**

env:
  # Define the base Docker image repository and tag for PingFederate
  # Base images can be hosted on DockerHub or private registries
  BASE_IMAGE_REPOSITORY: registry.hub.docker.com/pingidentity
  BASE_IMAGE_TAG: "2508"
  PRODUCT: pingfederate
  LAB_NAMESPACE: default
  #change the cluster name if the k8s cluster name is different
  DO_K8S_CLUSTER: k8s-1-33-1-do-5-blr1-1761210111081
  DOCR_REGISTRY: registry.digitalocean.com/ping-devops-training
  DOCR_REPOSITORY: pingfederate



jobs:
  build:
    name: Build and deploy PingFederate to Digital ocean
    runs-on: ubuntu-latest

    steps:

    - name: Set Release Tag variable
      id: vars
      run: echo "RELEASE_TAG=${LAB_NAMESPACE}-${GITHUB_REF#refs/*/}-${BASE_IMAGE_TAG}" >> $GITHUB_ENV


    # Check out the repository code
    - name: Check out code
      uses: actions/checkout@v2

    # Configure doctl credentials for authentication with do k8s cluster services
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
       token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    - name: Log in to DigitalOcean Container Registry
      run: doctl registry login
    


    - name: Build, tag, and push image to DO Container Registry
      run: |
        docker build \
          --build-arg BASE_IMAGE_REPOSITORY=$BASE_IMAGE_REPOSITORY \
          --build-arg PRODUCT=$PRODUCT \
          --build-arg BASE_IMAGE_TAG=$BASE_IMAGE_TAG \
          -t $DOCR_REGISTRY/$DOCR_REPOSITORY:$RELEASE_TAG \
          -f baseline/pingfederate/Dockerfile baseline/pingfederate/

        echo "✅ Image build completed"

        docker push $DOCR_REGISTRY/$DOCR_REPOSITORY:$RELEASE_TAG

        echo "✅ Image push completed"


    # Update kubeconfig to access the DO cluster
    - name: Save DigitalOcean kubeconfig with short-lived credentials
      run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${DO_K8S_CLUSTER}

    # Install Helm CLI for managing Kubernetes applications
    - name: Deploy Helm
      run: |
        # less secure: for non-prod
        curl -fsSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

        # more secure: for prod
        # curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null
        # sudo apt-get install apt-transport-https --yes
        # echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
        # sudo apt-get update
        # sudo apt-get install helm
        # sleep 5s
        # echo "Helm installed"

        # Add and update the PingIdentity Helm repository
        helm repo add pingidentity https://helm.pingidentity.com/ 
        helm repo update 


        # Deploy the application using Helm, setting the appropriate parameters

        # This Helm command upgrades or installs the PingFederate release using the Ping Identity DevOps Helm chart.
        # It sets several configuration values, including accepting the EULA, specifying image tags and repositories,
        # and setting the release name. The command also specifies the chart version and the namespace to use,
        # and includes additional values from a values.yaml file.

        helm upgrade --install pingfederate-release pingidentity/ping-devops \
        --set global.envs.PING_IDENTITY_ACCEPT_EULA=YES \
        --set pingfederate-admin.image.repository=$DOCR_REGISTRY/$DOCR_REPOSITORY \
        --set pingfederate-engine.image.repository=$DOCR_REGISTRY/$DOCR_REPOSITORY \
        --set global.addReleaseNameToResource=none \
        --set pingtoolkit.image.tag="2508" \
        --set pingfederate-admin.image.tag=$RELEASE_TAG \
        --set pingfederate-engine.image.tag=$RELEASE_TAG \
        --version 0.10.0 \
        --namespace=$LAB_NAMESPACE \
        -f baseline/pingfederate/values.yaml


    - name: Set excecutable permissions Post Deployment Healthcheck
      run: chmod +x .github/workflows/health-check.sh

    - name: Post Deployment Healthcheck - PingFederate Admin
      run: .github/workflows/health-check.sh check_statefulset_readiness "pingfederate-admin" $LAB_NAMESPACE 300

    - name: Post Deployment Healthcheck - PingFederate Engine
      run: .github/workflows/health-check.sh check_deployment_readiness "pingfederate-engine" $LAB_NAMESPACE 300
